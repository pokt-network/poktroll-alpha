// Code generated by MockGen. DO NOT EDIT.
// Source: poktroll/x/application/keeper (interfaces: ApplicationKeeper)

// Package mocks is a generated GoMock package.
package mocks

import (
	types0 "poktroll/x/application/types"
	reflect "reflect"

	types "github.com/cosmos/cosmos-sdk/types"
	gomock "github.com/golang/mock/gomock"
)

// MockApplicationKeeper is a mock of ApplicationKeeper interface.
type MockApplicationKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockApplicationKeeperMockRecorder
}

// MockApplicationKeeperMockRecorder is the mock recorder for MockApplicationKeeper.
type MockApplicationKeeperMockRecorder struct {
	mock *MockApplicationKeeper
}

// NewMockApplicationKeeper creates a new mock instance.
func NewMockApplicationKeeper(ctrl *gomock.Controller) *MockApplicationKeeper {
	mock := &MockApplicationKeeper{ctrl: ctrl}
	mock.recorder = &MockApplicationKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockApplicationKeeper) EXPECT() *MockApplicationKeeperMockRecorder {
	return m.recorder
}

// GetAllApplication mocks base method.
func (m *MockApplicationKeeper) GetAllApplication(arg0 types.Context) []types0.Application {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllApplication", arg0)
	ret0, _ := ret[0].([]types0.Application)
	return ret0
}

// GetAllApplication indicates an expected call of GetAllApplication.
func (mr *MockApplicationKeeperMockRecorder) GetAllApplication(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllApplication", reflect.TypeOf((*MockApplicationKeeper)(nil).GetAllApplication), arg0)
}

// GetApplication mocks base method.
func (m *MockApplicationKeeper) GetApplication(arg0 types.Context, arg1 string) (types0.Application, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetApplication", arg0, arg1)
	ret0, _ := ret[0].(types0.Application)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetApplication indicates an expected call of GetApplication.
func (mr *MockApplicationKeeperMockRecorder) GetApplication(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetApplication", reflect.TypeOf((*MockApplicationKeeper)(nil).GetApplication), arg0, arg1)
}

// RemoveApplication mocks base method.
func (m *MockApplicationKeeper) RemoveApplication(arg0 types.Context, arg1 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RemoveApplication", arg0, arg1)
}

// RemoveApplication indicates an expected call of RemoveApplication.
func (mr *MockApplicationKeeperMockRecorder) RemoveApplication(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveApplication", reflect.TypeOf((*MockApplicationKeeper)(nil).RemoveApplication), arg0, arg1)
}

// SetApplication mocks base method.
func (m *MockApplicationKeeper) SetApplication(arg0 types.Context, arg1 types0.Application) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetApplication", arg0, arg1)
}

// SetApplication indicates an expected call of SetApplication.
func (mr *MockApplicationKeeperMockRecorder) SetApplication(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetApplication", reflect.TypeOf((*MockApplicationKeeper)(nil).SetApplication), arg0, arg1)
}
